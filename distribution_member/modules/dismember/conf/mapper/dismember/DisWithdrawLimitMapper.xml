<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapper.dismember.DisWithdrawLimitMapper" >
  <resultMap id="BaseResultMap" type="entity.dismember.DisWithdrawLimit" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="permonth_times" property="permonthTimes" jdbcType="INTEGER" />
    <result column="pertime_least" property="pertimeLeast" jdbcType="NUMERIC" />
    <result column="distributor_email" property="distributorEmail" jdbcType="VARCHAR" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, permonth_times, pertime_least, distributor_email, create_user, create_time,update_user,update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_dis_withdraw_limit
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_dis_withdraw_limit
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="entity.dismember.DisWithdrawLimit" >
    insert into t_dis_withdraw_limit (id, permonth_times, pertime_least, 
      distributor_email, create_user, create_time,update_user,update_time
      )
    values (#{id,jdbcType=INTEGER}, #{permonthTimes,jdbcType=INTEGER}, #{pertimeLeast,jdbcType=NUMERIC}, 
      #{distributorEmail,jdbcType=VARCHAR}, #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
      #{updateUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="entity.dismember.DisWithdrawLimit" >
    insert into t_dis_withdraw_limit
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="permonthTimes != null" >
        permonth_times,
      </if>
      <if test="pertimeLeast != null" >
        pertime_least,
      </if>
      <if test="distributorEmail != null" >
        distributor_email,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="permonthTimes != null" >
        #{permonthTimes,jdbcType=INTEGER},
      </if>
      <if test="pertimeLeast != null" >
        #{pertimeLeast,jdbcType=NUMERIC},
      </if>
      <if test="distributorEmail != null" >
        #{distributorEmail,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="entity.dismember.DisWithdrawLimit" >
    update t_dis_withdraw_limit
    <set >
      <if test="permonthTimes != null" >
        permonth_times = #{permonthTimes,jdbcType=INTEGER},
      </if>
      <if test="pertimeLeast != null" >
        pertime_least = #{pertimeLeast,jdbcType=NUMERIC},
      </if>
      <if test="distributorEmail != null" >
        distributor_email = #{distributorEmail,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="entity.dismember.DisWithdrawLimit" >
    update t_dis_withdraw_limit
    set permonth_times = #{permonthTimes,jdbcType=INTEGER},
      pertime_least = #{pertimeLeast,jdbcType=NUMERIC},
      distributor_email = #{distributorEmail,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getCommonWithdrawLimit" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from t_dis_withdraw_limit
    where distributor_email is null
    order by id desc
    limit 1
  </select>
</mapper>