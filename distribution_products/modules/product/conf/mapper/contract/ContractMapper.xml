<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapper.contract.ContractMapper" >
  <resultMap id="BaseResultMap" type="entity.contract.Contract" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="contract_no" property="contractNo" jdbcType="VARCHAR" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="distribution_mode" property="distributionMode" jdbcType="INTEGER" />
    <result column="distribution_type" property="distributionType" jdbcType="INTEGER" />
    <result column="distribution_name" property="distributionName" jdbcType="VARCHAR" />
    <result column="contract_start" property="contractStart" jdbcType="TIMESTAMP" />
    <result column="contract_end" property="contractEnd" jdbcType="TIMESTAMP" />
    <result column="bussiness_erp" property="bussinessErp" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, contract_no, account, phone, distribution_mode, distribution_type, distribution_name, 
    contract_start, contract_end, bussiness_erp, create_time, update_time, create_user,status
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select 
    <include refid="Base_Column_List" />
	from t_contract
	where id=#{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectByCno" resultMap="BaseResultMap" parameterType="java.lang.String">
    select 
    <include refid="Base_Column_List" />
	from t_contract
	where contract_no=#{cno,jdbcType=VARCHAR}
  </select>
  
  <select id="select" resultMap="BaseResultMap" parameterType="java.util.Map">
    select 
    <include refid="Base_Column_List" />
	from t_contract
	where 1=1
	<if test="param.search != null and param.search != ''">
    	<![CDATA[
			and (lower(account) like lower('%'||#{param.search,jdbcType=VARCHAR}||'%')
			      or lower(phone) like lower('%'||#{param.search,jdbcType=VARCHAR}||'%') 
			      or lower(distribution_name) like lower('%'||#{param.search,jdbcType=VARCHAR}||'%') 
			      or lower(bussiness_erp) like lower('%'||#{param.search,jdbcType=VARCHAR}||'%')
			      or lower(contract_no) like lower('%'||#{param.search,jdbcType=VARCHAR}||'%')
			    )
		]]>
	</if>
	<if test="param.start != null and param.start != ''">
		<![CDATA[and contract_end >= to_timestamp(#{param.start,jdbcType=VARCHAR}, 'YYYY-MM-DD')]]>
	</if>
	<if test="param.end != null and param.end != ''">
		<![CDATA[and contract_end  <= to_timestamp(#{param.end,jdbcType=VARCHAR}, 'YYYY-MM-DD')]]>
	</if>
	<if test="param.model != null">
		and distribution_mode = #{param.model,jdbcType=VARCHAR}
	</if>
	<choose>
    	<when test="param.sidx != null and param.sidx != '' and param.sord != null and param.sord != ''">
			order by ${param.sidx} ${param.sord} nulls last
		</when>
		<otherwise>
			order by update_time desc
		</otherwise>
    </choose>
    <if test="param.page != null and param.rows != null">
    	LIMIT #{param.rows} OFFSET (#{param.page}-1)*#{param.rows}
    </if>
  </select>
  <select id="selectCount" resultType="java.lang.Integer" parameterType="java.util.Map">
    select 
    	count(1)
	from t_contract
	where 1=1
	<if test="param.search != null and param.search != ''">
    	<![CDATA[
			and (lower(account) like lower('%'||#{param.search,jdbcType=VARCHAR}||'%')
			      or lower(phone) like lower('%'||#{param.search,jdbcType=VARCHAR}||'%') 
			      or lower(distribution_name) like lower('%'||#{param.search,jdbcType=VARCHAR}||'%') 
			      or lower(bussiness_erp) like lower('%'||#{param.search,jdbcType=VARCHAR}||'%')
			      or lower(contract_no) like lower('%'||#{param.search,jdbcType=VARCHAR}||'%')
			    )
		]]>
	</if>
	<if test="param.start != null and param.start != ''">
		<![CDATA[and contract_end >= to_timestamp(#{param.start,jdbcType=VARCHAR}, 'YYYY-MM-DD')]]>
	</if>
	<if test="param.end != null and param.end != ''">
		<![CDATA[and contract_end  <= to_timestamp(#{param.end,jdbcType=VARCHAR}, 'YYYY-MM-DD')]]>
	</if>
	<if test="param.model != null">
		and distribution_mode = #{param.model,jdbcType=INTEGER}
	</if>
  </select>
  <insert id="insertSelective" parameterType="entity.contract.Contract" useGeneratedKeys="true" keyProperty="id" >
    insert into t_contract
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="contractNo != null" >
        contract_no,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="distributionMode != null" >
        distribution_mode,
      </if>
      <if test="distributionType != null" >
        distribution_type,
      </if>
      <if test="distributionName != null" >
        distribution_name,
      </if>
      <if test="contractStart != null" >
        contract_start,
      </if>
      <if test="contractEnd != null" >
        contract_end,
      </if>
      <if test="bussinessErp != null" >
        bussiness_erp,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="contractNo != null" >
        #{contractNo,jdbcType=VARCHAR},
      </if>
      <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="distributionMode != null" >
        #{distributionMode,jdbcType=INTEGER},
      </if>
      <if test="distributionType != null" >
        #{distributionType,jdbcType=INTEGER},
      </if>
      <if test="distributionName != null" >
        #{distributionName,jdbcType=VARCHAR},
      </if>
      <if test="contractStart != null" >
        #{contractStart,jdbcType=TIMESTAMP},
      </if>
      <if test="contractEnd != null" >
        #{contractEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="bussinessErp != null" >
        #{bussinessErp,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="entity.contract.Contract" >
    update t_contract
    <set >
      <if test="contractNo != null" >
        contract_no = #{contractNo,jdbcType=VARCHAR},
      </if>
      <if test="account != null" >
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="distributionMode != null" >
        distribution_mode = #{distributionMode,jdbcType=INTEGER},
      </if>
      <if test="distributionType != null" >
        distribution_type = #{distributionType,jdbcType=INTEGER},
      </if>
      <if test="distributionName != null" >
        distribution_name = #{distributionName,jdbcType=VARCHAR},
      </if>
      <if test="contractStart != null" >
        contract_start = #{contractStart,jdbcType=TIMESTAMP},
      </if>
      <if test="contractEnd != null" >
        contract_end = #{contractEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="bussinessErp != null" >
        bussiness_erp = #{bussinessErp,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where 1 = 1
    	<if test="id != null">
    		and id = #{id,jdbcType=INTEGER}
    	</if>
    	<if test="contractNo != null and contractNo != ''">
    		and contract_no = #{contractNo,jdbcType=INTEGER}
    	</if>
  </update>
</mapper>