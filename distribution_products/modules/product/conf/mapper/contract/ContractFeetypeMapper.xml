<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapper.contract.ContractFeetypeMapper" >
  <resultMap id="BaseResultMap" type="entity.contract.ContractFeetype" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="desc" property="desc" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, "desc", "type", create_time, create_user
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from public.t_contract_feetype
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from public.t_contract_feetype
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="entity.contract.ContractFeetype" >
    insert into public.t_contract_feetype (id, name, "desc",
      type, create_time, create_user
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{desc,jdbcType=VARCHAR}, 
      #{type,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="entity.contract.ContractFeetype" >
    insert into t_contract_feetype
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="desc != null" >
        "desc",
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="desc != null" >
        #{desc,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="entity.contract.ContractFeetype" >
    update public.t_contract_feetype
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="desc != null" >
        "desc" = #{desc,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="entity.contract.ContractFeetype" >
    update public.t_contract_feetype
    set name = #{name,jdbcType=VARCHAR},
      "desc" = #{desc,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user = #{createUser,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getContractFeetypesByPage" resultMap="BaseResultMap"
          parameterType="java.util.Map">
    select
    <include refid="Base_Column_List" />
    from t_contract_feetype
    where 1 = 1
    <if test="name != null and name !='' ">
      and "name" like '%'||#{name,jdbcType=VARCHAR}||'%'
    </if>
    ORDER by create_time asc
    <if test="currPage != null and pageSize != null">
      LIMIT #{pageSize} OFFSET (#{currPage}-1)*#{pageSize}
    </if>
  </select>

  <select id="getCountByPage" parameterType="java.util.Map" resultType="java.lang.Integer">
    select
    count(*)
    from t_contract_feetype
    where 1 = 1
    <if test="name != null and name !='' ">
      and "name" like '%'||#{name,jdbcType=VARCHAR}||'%'
    </if>
  </select>

  <select id="getAllContractFeetype" parameterType="java.util.Map">
    select
    <include refid="Base_Column_List" />
    from t_contract_feetype
  </select>

  <select id="countByParam" parameterType="java.util.Map" resultType="int">
    select count(*)
    from t_contract_feetype a
    where 1 =1
    <if test="name != null and name != ''">
      and a.name = #{name}
    </if>
    <if test="type != null and type != ''">
      and a.type = #{type}
    </if>
  </select>
</mapper>