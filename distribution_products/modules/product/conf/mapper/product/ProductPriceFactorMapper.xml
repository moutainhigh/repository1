<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapper.product.ProductPriceFactorMapper" >
  <resultMap id="BaseResultMap" type="entity.product.ProductPriceFactor" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="kind" property="kind" jdbcType="VARCHAR" />
    <result column="factor" property="factor" jdbcType="DOUBLE" />
    <result column="category_brand_id" property="categoryBrandId" jdbcType="INTEGER" />
    <result column="price_id" property="priceId" jdbcType="INTEGER" />
    <result column="profit" property="profit" jdbcType="DOUBLE" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, kind, factor, category_brand_id,price_id,profit,create_date,update_date
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_product_price_factor
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_product_price_factor
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="entity.product.ProductPriceFactor" >
    insert into t_product_price_factor (id, kind, factor, 
      category_brand_id)
    values (#{id,jdbcType=INTEGER}, #{kind,jdbcType=VARCHAR}, #{factor,jdbcType=DOUBLE}, 
      #{categoryBrandId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="entity.product.ProductPriceFactor" >
    insert into t_product_price_factor
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="kind != null" >
        kind,
      </if>
      <if test="factor != null" >
        factor,
      </if>
      <if test="categoryBrandId != null" >
        category_brand_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="kind != null" >
        #{kind,jdbcType=VARCHAR},
      </if>
      <if test="factor != null" >
        #{factor,jdbcType=DOUBLE},
      </if>
      <if test="categoryBrandId != null" >
        #{categoryBrandId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="entity.product.ProductPriceFactor" >
    update t_product_price_factor
    <set >
      <if test="kind != null" >
        kind = #{kind,jdbcType=VARCHAR},
      </if>
      <if test="factor != null" >
        factor = #{factor,jdbcType=DOUBLE},
      </if>
      <if test="categoryBrandId != null" >
        category_brand_id = #{categoryBrandId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="entity.product.ProductPriceFactor" >
    update t_product_price_factor
    set kind = #{kind,jdbcType=VARCHAR},
      factor = #{factor,jdbcType=DOUBLE},
      category_brand_id = #{categoryBrandId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="batchInsert" parameterType="java.util.List">
	insert into t_product_price_factor
	(kind, factor,profit, category_brand_id,price_id)
	values
	<foreach collection="list" item="item" index="index" separator=",">
		(#{item.kind,jdbcType=VARCHAR},
		#{item.factor,jdbcType=DOUBLE},
		#{item.profit,jdbcType=DOUBLE},	
		#{item.categoryBrandId,jdbcType=INTEGER},
		#{item.priceId,jdbcType=INTEGER})
	</foreach>
   </insert>
   <update id="batchUpdate" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index"
			separator=";">
			update t_product_price_factor
			<trim prefix="set" suffix="" suffixOverrides=",">
				<if test="item.factor != null">
					factor = #{item.factor,jdbcType=DOUBLE},
				</if>
				<if test="item.profit != null">
					profit = #{item.profit,jdbcType=DOUBLE},
				</if>
				<if test="item.updateDate != null">
					update_date = #{item.updateDate,jdbcType=DOUBLE}, 
				</if>
			</trim>
			where  1 = 1
			<if test="item.categoryBrandId != null ">
			 	and category_brand_id = #{item.categoryBrandId,jdbcType=INTEGER}
			</if>
			<if test="item.priceId != null">
			 	and price_id = #{item.priceId,jdbcType=INTEGER}
			</if>
			<if test="item.kind != null">
				and  kind = #{item.kind,jdbcType=VARCHAR}
			</if>
		</foreach>
	</update>
	<select id="getBybBrandId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select  
		<include refid="Base_Column_List" />
		from 
		t_product_price_factor
		where category_brand_id = #{CategoryBrandId,jdbcType=INTEGER}
	</select>
	<select id="getByPriceIds" resultMap="BaseResultMap" parameterType="java.util.List">
		select  
		<include refid="Base_Column_List" />
		from 
		t_product_price_factor
		where  1 = 1  and price_id in (
		<foreach collection="list" item="item" 
			separator=",">
			#{item}
		</foreach>
		)
	</select>
</mapper>