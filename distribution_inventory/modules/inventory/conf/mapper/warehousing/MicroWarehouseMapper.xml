<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapper.warehousing.MicroWarehouseMapper">
	<resultMap id="BaseResultMap" type="entity.warehousing.MicroWarehouse">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="warehouse_name" property="warehouseName"
			jdbcType="VARCHAR" />
		<result column="distributor_id" property="distributorId"
			jdbcType="INTEGER" />
		<result column="distributor_email" property="distributorEmail"
			jdbcType="VARCHAR" />
		<result column="distributor_name" property="distributorName"
			jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="create_by" property="createBy" jdbcType="VARCHAR" />
		<result column="last_update" property="lastUpdate" jdbcType="TIMESTAMP" />
		<result column="update_by" property="updateBy" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, warehouse_name, distributor_id, distributor_email,
		distributor_name,
		create_time,
		create_by, last_update,
		update_by
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from t_micro_warehouse
		where id = #{id,jdbcType=INTEGER}
	</select>

	<select id="query" resultType="dto.warehousing.MicroWarehouseDto"
		parameterType="forms.warehousing.MicroWarehouseForm">
		select
			mw.id,mw.warehouse_name warehouseName,mw.distributor_id
			distributorId,mw.distributor_name distributorName,mw.create_time createTime
			,(select
			sum(total_stock) as totalStock from t_micro_goods_inventory
			where
			mwarehouse_id=mw."id" ) from t_micro_warehouse mw
			<where>
				<if test="id != null">
					and mw.id = #{id}
				</if>
				<if test="distributorName != null and distributorName !='' ">
					and mw.distributor_name =
					#{distributorName,jdbcType=VARCHAR}
				</if>
				<if test="distributorEmail != null and distributorEmail !='' ">
					and mw.distributor_email =
					#{distributorEmail,jdbcType=VARCHAR}
				</if>
			</where>
		ORDER BY create_time asc
		<if test="pageNo != null and pageNo !=0">
			limit #{pageSize} offset (#{pageNo}-1)*#{pageSize}
		</if>
	</select>

	<select id="getTotal" resultType="Integer"
		parameterType="forms.warehousing.MicroWarehouseForm">
		select count(id) from t_micro_warehouse
		<where>
			<if test="id != null">
				and id = #{id}
			</if>
			<if test="distributorName != null and distributorName !='' ">
				and distributor_name = #{distributorName}
			</if>
		</where>

	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		t_micro_warehouse
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="delete" parameterType="entity.warehousing.MicroWarehouse">
		delete from t_micro_warehouse
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="entity.warehousing.MicroWarehouse" useGeneratedKeys="true" keyProperty="id">
		insert into t_micro_warehouse
		( 
			warehouse_name, 
			distributor_id,
			distributor_email,
			distributor_name, 
			create_time,
			create_by,
			last_update, 
			update_by
		)
		values 
		(
			#{warehouseName,jdbcType=VARCHAR},
			#{distributorId,jdbcType=INTEGER},
			#{distributorEmail,jdbcType=INTEGER},
			#{distributorName,jdbcType=VARCHAR}, 
			#{createTime,jdbcType=TIMESTAMP},
			#{createBy,jdbcType=VARCHAR},
			#{lastUpdate,jdbcType=TIMESTAMP},
			#{updateBy,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="entity.warehousing.MicroWarehouse">
		insert into t_micro_warehouse
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="warehouseName != null">
				warehouse_name,
			</if>
			<if test="distributorId != null">
				distributor_id,
			</if>
			<if test="distributorName != null">
				distributor_name,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="createBy != null">
				create_by,
			</if>
			<if test="lastUpdate != null">
				last_update,
			</if>
			<if test="updateBy != null">
				update_by,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="warehouseName != null">
				#{warehouseName,jdbcType=VARCHAR},
			</if>
			<if test="distributorId != null">
				#{distributorId,jdbcType=VARCHAR},
			</if>
			<if test="distributorName != null">
				#{distributorName,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createBy != null">
				#{createBy,jdbcType=VARCHAR},
			</if>
			<if test="lastUpdate != null">
				#{lastUpdate,jdbcType=TIMESTAMP},
			</if>
			<if test="updateBy != null">
				#{updateBy,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="update" parameterType="entity.warehousing.MicroWarehouse">
		update t_micro_warehouse
		<set>
			<if test="warehouseName != null">
				warehouse_name = #{warehouseName,jdbcType=VARCHAR},
			</if>
			<if test="distributorId != null">
				distributor_id = #{distributorId,jdbcType=VARCHAR},
			</if>
			<if test="distributorName != null">
				distributor_name = #{distributorName,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createBy != null">
				create_by = #{createBy,jdbcType=VARCHAR},
			</if>
			<if test="lastUpdate != null">
				last_update = #{lastUpdate,jdbcType=TIMESTAMP},
			</if>
			<if test="updateBy != null">
				update_by = #{updateBy,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="entity.warehousing.MicroWarehouse">
		update
		t_micro_warehouse
		set warehouse_name =
		#{warehouseName,jdbcType=VARCHAR},
		distributor_id =
		#{distributorId,jdbcType=VARCHAR},
		distributor_name =
		#{distributorName,jdbcType=VARCHAR},
		create_time =
		#{createTime,jdbcType=TIMESTAMP},
		create_by =
		#{createBy,jdbcType=VARCHAR},
		last_update =
		#{lastUpdate,jdbcType=TIMESTAMP},
		update_by =
		#{updateBy,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>